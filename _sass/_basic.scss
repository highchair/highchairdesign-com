//
// Only the most basic styles will do
//
// Manifesto:
// I am a designer, yes, but I am workign within a well-designed system called HTML.
// Who am I to force my austhetics on what the web already does well?
// Without much fuss, I get:
//    1. Performance
//    2. Semantics
//    3. Accessibility
//    4. Responsiveness
// 
// Let's start this experiment
//

html,
body {
  background-color: $fg__white;
  color: $fg__text;
  font-family: $font__serif;
  font-size: 100%;
  line-height: $lineheight-base;

  // Default browser margins are 8px/.5em
  margin: 0;
}

// Border Box
html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}


// Text scaling
body {

  @media ($bp__small-up) {
    font-size: 106.25%;
  }
  @media ($bp__medium-up) {
    font-size: 112.5%;
  }
  @media ($bp__large-up) {
    font-size: 125%;
  }
}

// All links
a {
  color: $fg__link;
  transition: all 250ms ease;
}

a:visited {
  color: $fg__link-visited;
}

a:active {
  color: $fg__link-active;
}

a:hover,
a:focus,
a:visited:hover,
a:visited:focus {
  color: $fg__link-hover;
}

// Special focus state design
a:focus,
a:visited:focus {
  color: $fg__default;
  outline: 2px dotted $fg__link;
  outline-offset: .25em;
  
  // Newish property
  // Intent is to give padding around words that break over multiple lines
  // https://css-tricks.com/multi-line-padded-text/
  box-decoration-break: clone;
  -webkit-box-decoration-break: clone;
}


// Skip Link
a[href="#nav"],
a[href="#top"] {
  @extend %fluid-padding-lr;
  display: block;
  font-family: $font__sans;
  font-size: 87.5%;
  font-weight: 100;
  letter-spacing: .025em;
  text-align: right;
  padding-top: 1em;
  padding-bottom: 1em;
  
  &:focus,
  &:visited:focus {
    outline-offset: -.5em; // Needs to be inside since this is `display: block`
  }
}


// Other general styles
ul {
  padding-left: 0;
}

li,
dd {
  margin-left: 2em;
}

figure {
  margin: 0;
}

pre {
  // Tabs! https://developer.mozilla.org/en-US/docs/Web/CSS/tab-size
  tab-size: 4;
}